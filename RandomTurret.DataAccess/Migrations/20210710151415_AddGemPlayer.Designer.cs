// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RandomTurret.DataAccess;

namespace RandomTurret.DataAccess.Migrations
{
    [DbContext(typeof(RandomTurretContext))]
    [Migration("20210710151415_AddGemPlayer")]
    partial class AddGemPlayer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("RandomTurret.Entities.GemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GemType")
                        .HasColumnType("int");

                    b.Property<int?>("ImpactType")
                        .HasColumnType("int");

                    b.Property<int?>("MergeType")
                        .HasColumnType("int");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.Property<int?>("ShootType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RarityId");

                    b.ToTable("Gems");
                });

            modelBuilder.Entity("RandomTurret.Entities.GemPlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GemId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GemPlayers");
                });

            modelBuilder.Entity("RandomTurret.Entities.GemStatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GemId")
                        .HasColumnType("int");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GemId");

                    b.HasIndex("RarityId");

                    b.HasIndex("StatId");

                    b.ToTable("GemStats");
                });

            modelBuilder.Entity("RandomTurret.Entities.MobEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MobType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mobs");
                });

            modelBuilder.Entity("RandomTurret.Entities.MobStatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MobEntityId")
                        .HasColumnType("int");

                    b.Property<int>("StatEntityId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MobEntityId");

                    b.HasIndex("StatEntityId");

                    b.ToTable("MobStats");
                });

            modelBuilder.Entity("RandomTurret.Entities.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Elo")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RandomTurret.Entities.RarityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("LootValue")
                        .HasColumnType("float");

                    b.Property<int>("RarityType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rarities");
                });

            modelBuilder.Entity("RandomTurret.Entities.StatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("StatType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RarityId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplatePlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplatePlayers");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplateStatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RarityId");

                    b.HasIndex("StatId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateStats");
                });

            modelBuilder.Entity("RandomTurret.Entities.TowerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TowerType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.ToTable("Towers");
                });

            modelBuilder.Entity("RandomTurret.Entities.TowerStatEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("StatEntityId")
                        .HasColumnType("int");

                    b.Property<int>("TowerEntityId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StatEntityId");

                    b.HasIndex("TowerEntityId");

                    b.ToTable("TowerStats");
                });

            modelBuilder.Entity("RandomTurret.Entities.WaveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("DifficultyMultiplier")
                        .HasColumnType("float");

                    b.Property<int>("WaveNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Waves");
                });

            modelBuilder.Entity("RandomTurret.Entities.WaveMobEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MobEntityId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("WaveEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MobEntityId");

                    b.HasIndex("WaveEntityId");

                    b.ToTable("WavesMobs");
                });

            modelBuilder.Entity("RandomTurret.Entities.GemEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.RarityEntity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rarity");
                });

            modelBuilder.Entity("RandomTurret.Entities.GemPlayerEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.GemEntity", "Gem")
                        .WithMany()
                        .HasForeignKey("GemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.PlayerEntity", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gem");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("RandomTurret.Entities.GemStatEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.GemEntity", "Gem")
                        .WithMany()
                        .HasForeignKey("GemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.RarityEntity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.StatEntity", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gem");

                    b.Navigation("Rarity");

                    b.Navigation("Stat");
                });

            modelBuilder.Entity("RandomTurret.Entities.MobStatEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.MobEntity", "MobEntity")
                        .WithMany()
                        .HasForeignKey("MobEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.StatEntity", "StatEntity")
                        .WithMany()
                        .HasForeignKey("StatEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MobEntity");

                    b.Navigation("StatEntity");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplateEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.RarityEntity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rarity");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplatePlayerEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.PlayerEntity", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.TemplateEntity", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("RandomTurret.Entities.TemplateStatEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.RarityEntity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.StatEntity", "Stat")
                        .WithMany()
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.TemplateEntity", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rarity");

                    b.Navigation("Stat");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("RandomTurret.Entities.TowerEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.PlayerEntity", "PlayerEntity")
                        .WithMany()
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("RandomTurret.Entities.TowerStatEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.StatEntity", "StatEntity")
                        .WithMany()
                        .HasForeignKey("StatEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.TowerEntity", "TowerEntity")
                        .WithMany()
                        .HasForeignKey("TowerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatEntity");

                    b.Navigation("TowerEntity");
                });

            modelBuilder.Entity("RandomTurret.Entities.WaveMobEntity", b =>
                {
                    b.HasOne("RandomTurret.Entities.MobEntity", "MobEntity")
                        .WithMany()
                        .HasForeignKey("MobEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RandomTurret.Entities.WaveEntity", "WaveEntity")
                        .WithMany()
                        .HasForeignKey("WaveEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MobEntity");

                    b.Navigation("WaveEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
